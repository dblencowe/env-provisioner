---
- name: Create provisioning folder
  become: true
  file:
    path: /var/lib/provisioning
    state: directory
    mode: 0755

- name: Add cgroup directives to boot command line config
  lineinfile:
    path: /boot/firmware/cmdline.txt
    regexp: '((.)+?)(\scgroup_\w+=\w+)*$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
    backrefs: yes
  when: ( ansible_facts.architecture is search("aarch64") )
  register: enable_cgroups

- name: Reboot node to apply cgroups
  reboot:
  when: ( enable_cgroups.changed and ansible_facts.architecture is search("aarch64") )

- name: Set GPU memory split to 16 MB
  lineinfile:
    path: /boot/config.txt
    line: "gpu_mem=16"
    create: yes

- name: Create containerd config file
  file:
    path: "/etc/modules-load.d/containerd.conf"
    state: "touch"

- name: Add conf for containerd
  blockinfile:
    path: "/etc/modules-load.d/containerd.conf"
    block: |
          overlay
          br_netfilter

- name: Add required modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items: [overlay, br_netfilter]

- name: Set system configurations for Kubernetes networking
  file:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    state: "touch"

- name: Add conf for containerd
  blockinfile:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply new settings
  command: sysctl --system

- name: Install containerd
  apt:
    name: containerd
    state: present

- name: Create directory to store containerd config
  file:
    state: directory
    path: /etc/containerd

- name: Create containerd configuration
  template:
    src: containerd-config.toml.j2
    dest: /etc/containerd/config.toml

- name: Restart containerd
  shell: systemctl restart containerd

- name: disable swap
  shell: |
          swapoff -a
          sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: install and configure dependencies
  apt:
    state: present
    name: ['apt-transport-https', 'curl']

- name: Add an Apt signing key for k8s
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Unhold packages
  become: true
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  with_items: [kubelet, kubeadm, kubectl]

- name: Install Kubernetes
  become: true
  apt:
    update_cache: true
    name: [kubelet=1.21.12-00, kubeadm=1.21.12-00, kubectl=1.21.12-00]
    state: present
  register: k8s_install

- name: Hold packages
  become: true
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items: [kubelet, kubeadm, kubectl]
